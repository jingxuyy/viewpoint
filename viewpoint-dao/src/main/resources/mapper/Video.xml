<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xu.viewpoint.dao.VideoDao">

    <insert id="addVideo" keyProperty="id" useGeneratedKeys="true">
        insert into t_video(
                userId,
                url,
                thumbnail,
                `title`,
                `type`,
                duration,
                area,
                description,
                createTime
            )
        values (
            #{video.userId},
            #{video.url},
            #{video.thumbnail},
            #{video.title},
            #{video.type},
            #{video.duration},
            #{video.area},
            #{video.description},
            #{video.createTime}
            )
    </insert>
    <insert id="batchAddVideoTags">
        insert into
        t_video_tag(
            videoId,
            tagId,
            createTime
        )
        values
        <foreach collection="videoTagList" separator="," item="videoTag" open="(" close=")">
                #{videoTag.videoId},
                #{videoTag.tagId},
                #{videoTag.createTime}
            </foreach>
    </insert>
    <insert id="addVideoLike">
        insert into
            t_video_like(
                 userId,
                 videoId,
                 createTime
            )
        values (
            #{videoLike.userId},
            #{videoLike.videoId},
            #{videoLike.createTime}
            )
    </insert>
    <insert id="addVideoCollection">
        insert into
            t_video_collection(
                   videoId,
                   userId,
                   groupId,
                   createTime
            )values (
             #{videoCollection.videoId},
             #{videoCollection.userId},
             #{videoCollection.groupId},
             #{videoCollection.createTime}
                )
    </insert>
    <insert id="addVideoCoins">
        insert into
            t_video_coin(
                 userId,
                 videoId,
                 amount,
                 createTime
                )
        values (
             #{videoCoin.userId},
             #{videoCoin.videoId},
             #{videoCoin.amount},
             #{videoCoin.createTime}
            )
    </insert>
    <update id="updateVideoCollection">
        update
            t_video_collection
        set
            groupId = #{videoCollection.groupId}
        where
            videoId = #{videoCollection.videoId}
        and
            userId = #{videoCollection.userId}
    </update>
    <update id="updateVideoCoins">
        update
            t_video_coin
        set
            amount = amount + #{videoCoin.amount},
            updateTime = #{videoCoin.updateTime}
        where
            userId = #{videoCoin.userId}
        and
            videoId = #{videoCoin.videoId}
    </update>
    <delete id="deleteVideoLike">
        delete from
            t_video_like
        where
            userId = #{userId} and videoId = #{videoId}
    </delete>
    <delete id="deleteVideoCollection">
        delete from
            t_video_collection
        where
            videoId = #{videoId} and userId = #{userId}
    </delete>
    <select id="pageCountVideos" resultType="java.lang.Integer">
        select
            count(1)
        from
            t_video
        <where>
            <if test="params.area != null and params.area != ''">
                area = #{params.area}
            </if>
        </where>
    </select>

    <select id="pageListVideos" resultType="com.xu.viewpoint.dao.domain.Video">
        select
            *
        from
            t_video
        <where>
            <if test="params.area != null and params.area != ''">
                area = #{params.area}
            </if>
        </where>
        order by
            id
        desc
        limit #{params.start}, #{params.limit}
    </select>
    <select id="getVideoById" resultType="com.xu.viewpoint.dao.domain.Video">
        select
            *
        from
            t_video
        where
            id = #{videoId}
    </select>
    <select id="getVideoLikeByVideoIdAndUserId" resultType="com.xu.viewpoint.dao.domain.VideoLike">
        select
            *
        from
            t_video_like
        where
            userId = #{userId} and videoId = #{videoId}
    </select>
    <select id="getVideoLikes" resultType="java.lang.Long">
        select
            count(1)
        from
            t_video_like
        where
            videoId = #{videoId}
    </select>
    <select id="getVideoCollections" resultType="java.lang.Long">
        select
            count(1)
        from
            t_video_collection
        where
            videoId = #{videoId}
    </select>
    <select id="getVideoCollectionByVideoIdAndUserId" resultType="com.xu.viewpoint.dao.domain.VideoCollection">
        select
            *
        from
            t_video_collection
        where
            videoId = #{videoId} and userId = #{userId}
    </select>
    <select id="getVideoCoinsByUserIdAndVideoId" resultType="com.xu.viewpoint.dao.domain.VideoCoin">
        select
            *
        from
            t_video_coin
        where
            userId = #{userId}
        and
            videoId = #{videoId}
    </select>
    <select id="getVideoCoinsAmounts" resultType="java.lang.Long">
        select
            sum(amount)
        from
            t_video_coin
        where
            videoId = #{videoId}
    </select>
</mapper>